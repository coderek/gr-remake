{"version":3,"sources":["app/scripts/app.js","app/scripts/controller.js","app/scripts/etc/hbs-helpers.js","app/scripts/etc/setup.js","app/scripts/index.js","app/scripts/models/entries.js","app/scripts/models/feeds.js","app/scripts/router.js","app/scripts/templates/entries.hbs","app/scripts/templates/entry-empty.hbs","app/scripts/templates/entry.hbs","app/scripts/templates/feed-item.hbs","app/scripts/templates/feed-meta.hbs","app/scripts/views/entries.js","app/scripts/views/feed-form.js","app/scripts/views/feed-meta.js","app/scripts/views/feeds.js"],"names":[],"mappings":"gjCAAA,QAAA,SAAA,cAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,iBACA,EAAA,EAAA,mBACA,EAAA,EAAA,kBAEA,GADA,EAAA,qBACA,EAAA,qBAEA,GAAA,qBACA,EAAA,cACA,IAAA,GAAA,GAAA,GAAA,KAAA,OAAA,IAEA,EAAA,GAAA,YAAA,WAEA,GAAA,YACA,YAAA,oBACA,cAAA,kBACA,eAAA,sBAGA,EAAA,eAAA,WACA,KAAA,YAAA,KAAA,GAAA,IAAA,WAAA,KACA,KAAA,eAAA,KAAA,KAGA,EAAA,GAAA,QAAA,WACA,EAAA,YACA,SAAA,QAAA,OAAA,WAAA,MAGA,EAAA,SAAA,WAAA,eAAA,SAAA,EAAA,GACA,QAAA,gBAAA,GAAA,OAAA,gBAAA,kBAEA,IAAA,GAAA,GAAA,IAAA,WAAA,GACA,GAAA,cAAA,KAAA,GACA,EAAA,QAAA,SAAA,KAGA,EAAA,SAAA,WAAA,WAAA,SAAA,GACA,GAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,YACA,GAAA,WAAA,EAAA,UACA,EAAA,QAAA,eAAA,EAAA,EAAA,WAGA,EAAA,SAAA,WAAA,cAAA,SAAA,GACA,GAAA,GAAA,EAAA,IAAA,EACA,OAAA,GACA,EAAA,SAAA,QAAA,WACA,OAAA,QAAA,WACA,EAAA,QAAA,YAHA,SAQA,EAAA,SAAA,WAAA,YAAA,SAAA,GACA,GAAA,GAAA,EAAA,IAAA,EACA,GACA,EAAA,QAAA,eAAA,EAAA,EAAA,SAEA,OAAA,QAAA,wBAIA,OAAA,IAAA,EAEA,EAAA,QAAA,EAEA,EAAA,YAAA,MAAA,WACA,EAAA,gBAAA,YAAA,YClEA,QAAA,SAAA,qBAAA,SAAA,EAAA,EAAA,GAAA,EAAA,SACA,SAAA,SAAA,GACA,QAAA,IAAA,YAAA,GACA,IAAA,QAAA,YAAA,OCHA,QAAA,SAAA,0BAAA,WAGA,QAAA,GAAA,GACA,GAAA,GAAA,OAAA,EACA,OAAA,GAAA,UAEA,EAAA,OAAA,qBAFA,GAKA,QAAA,GAAA,GACA,GAAA,GAAA,OAAA,EACA,OAAA,GAAA,UACA,EAAA,UADA,GAZA,WAAA,eAAA,YAAA,GACA,WAAA,eAAA,MAAA,KCDA,QAAA,SAAA,oBAAA,WAEA,EAAA,OAAA,UAAA,GAAA,QAAA,6BAAA,SAAA,GACA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,CAIA,EAAA,gBACA,IAAA,GAAA,KAAA,SAAA,KACA,EAAA,KAAA,IACA,GAAA,EAAA,MAAA,EAAA,QACA,EAAA,EAAA,MAAA,EAAA,QAAA,KAAA,GAEA,eAAA,KAAA,QACA,EAAA,kBACA,SAAA,QAAA,SAAA,GAAA,SAAA,UCfA,QAAA,SAAA,gBAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,QAEA,GAAA,UCFA,QAAA,SAAA,yBAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,SAAA,MAAA,QACA,YAAA,QAGA,EAAA,SAAA,WAAA,QACA,MAAA,EACA,WAAA,SAAA,EAAA,GACA,KAAA,IAAA,EAAA,KAGA,WAAA,SAAA,EAAA,GACA,MAAA,GAAA,IAAA,WAAA,EAAA,IAAA,WAAA,GAAA,GAMA,eAAA,WAGA,IAAA,GADA,GAAA,EACA,EAAA,EAAA,EAAA,KAAA,SACA,KAAA,GAAA,GAAA,IAAA,UADA,IAEA,GAAA,CAEA,OAAA,KAKA,GAAA,QAAA,IC7BA,QAAA,SAAA,uBAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aAEA,EAAA,SAAA,MAAA,QACA,YAAA,MAEA,MAAA,SAAA,GAQA,MAPA,MAAA,uBAAA,EAAA,KAAA,cAEA,EAAA,QAAA,EAAA,WACA,KAAA,WAAA,EAAA,gBAGA,GAAA,SACA,GAGA,uBAAA,SAAA,GACA,KAAA,UACA,KAAA,QAAA,GAAA,OAAA,IAAA,UAAA,EAAA,aACA,KAAA,QAAA,GAAA,oBAAA,WACA,KAAA,QAAA,eACA,QAIA,WAAA,SAAA,GACA,KAAA,QAAA,IAAA,IAGA,WAAA,WACA,KAAA,uBAAA,KAAA,IACA,KAAA,GAAA,UAAA,WACA,KAAA,SACA,KAAA,QAAA,QAAA,kBAEA,KAAA,QAAA,QAIA,eAAA,WACA,MAAA,MAAA,QACA,KAAA,QAAA,iBAEA,KAKA,EAAA,SAAA,WAAA,QACA,MAAA,EACA,IAAA,SACA,WAAA,SAAA,EAAA,GACA,MAAA,QAAA,EAAA,IAAA,YAAA,OAAA,EAAA,IAAA,YAAA,GAAA,IAIA,GAAA,KAAA,EAEA,EAAA,QAAA,IC1DA,QAAA,SAAA,iBAAA,SAAA,EAAA,GAAA,GAAA,GAAA,WAAA,UAAA,QACA,WACA,YAAA,YAEA,WAAA,EAAA,iBAIA,IAAA,KCRA,QAAA,SAAA,4BAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAMA,MALA,MAAA,cAAA,EAAA,YACA,EAAA,KAAA,MAAA,EAAA,EAAA,SAAA,EAAA,MAIA,qFAEA,mBAAA,SAAA,OAAA,IACA,UAAA,WACA,MAAA,KAEA,gBAAA,IAAA,GAAA,EAAA,UACA,EAAA,QAAA,KCbA,QAAA,SAAA,gCAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAMA,MALA,MAAA,cAAA,EAAA,YACA,EAAA,KAAA,MAAA,EAAA,EAAA,SAAA,EAAA,MAIA,oBAEA,mBAAA,SAAA,OAAA,IACA,UAAA,WACA,MAAA,KAEA,gBAAA,IAAA,GAAA,EAAA,UACA,EAAA,QAAA,KCbA,QAAA,SAAA,0BAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,cAAA,EAAA,YACA,EAAA,KAAA,MAAA,EAAA,EAAA,SAAA,EAAA,KACA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,EAAA,cAAA,EAAA,KAAA,gBAcA,OAXA,IAAA,mEACA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,IACA,GAAA,IAAA,KAAA,GAAA,GACA,GAAA,iFACA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,QAAA,KAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,MAAA,GAAA,EAAA,QAAA,KACA,gCACA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,KAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,GACA,GAAA,EAAA,GACA,6NAGA,mBAAA,SAAA,OAAA,IACA,UAAA,WACA,MAAA,KAEA,gBAAA,IAAA,GAAA,EAAA,UACA,EAAA,QAAA,KCxBA,QAAA,SAAA,8BAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,cAAA,EAAA,YACA,EAAA,KAAA,MAAA,EAAA,EAAA,SAAA,EAAA,KACA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,KAAA,gBAoBA,OAjBA,IAAA,qFACA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,GACA,GAAA,EAAA,GACA,MACA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,GACA,GAAA,EAAA,GACA,wCACA,EAAA,EAAA,QAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,OAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,GACA,GAAA,EAAA,GACA,oGACA,EAAA,EAAA,aAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,YAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,GACA,GAAA,EAAA,GACA,iCAGA,mBAAA,SAAA,OAAA,IACA,UAAA,WACA,MAAA,KAEA,gBAAA,IAAA,GAAA,EAAA,UACA,EAAA,QAAA,KC9BA,QAAA,SAAA,8BAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAKA,QAAA,GAAA,EAAA,GAEA,GAAA,GAAA,EAAA,EAAA,EAAA,EAQA,OAPA,IAAA,wCACA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,KACA,EAAA,GAAA,EAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,QAAA,KAAA,IAAA,GACA,GAAA,EAAA,GACA,iFACA,GAAA,EAAA,EAAA,WAAA,GAAA,EAAA,UAAA,GAAA,QAAA,KAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,YAAA,GAAA,EAAA,QAAA,KACA,YAbA,KAAA,cAAA,EAAA,YACA,EAAA,KAAA,MAAA,EAAA,EAAA,SAAA,EAAA,KACA,IAAA,GAAA,EAAA,GAAA,EAAA,WAAA,EAAA,KAAA,iBAAA,EAAA,EAAA,cAAA,EAAA,IAkBA,OAHA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,EAAA,KAAA,QAAA,QAAA,EAAA,KAAA,GAAA,EAAA,QAAA,EAAA,EAAA,GAAA,KAAA,KACA,GAAA,IAAA,KAAA,GAAA,GACA,GAAA,MAGA,mBAAA,SAAA,OAAA,IACA,UAAA,WACA,MAAA,KAEA,gBAAA,IAAA,GAAA,EAAA,UACA,EAAA,QAAA,KC5BA,QAAA,SAAA,wBAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,sBACA,EAAA,EAAA,wBAEA,EAAA,WAAA,SAAA,QACA,SAAA,EACA,UAAA,UAEA,WAAA,WACA,KAAA,MAAA,IAAA,WACA,KAAA,IAAA,SAAA,YAIA,IACA,QAAA,WACA,MAAA,UAGA,QACA,kBAAA,iBAGA,aACA,eAAA,UAGA,cAAA,WACA,GAAA,GAAA,IACA,MAAA,oBACA,KAAA,GAAA,QAAA,KAAA,KAAA,MAAA,IAAA,gBAEA,KAAA,GAAA,QAAA,SACA,KAAA,MAAA,MAAA,QAAA,IAAA,OAAA,IAAA,KAAA,WACA,EAAA,IAAA,SAAA,gBAKA,EAAA,WAAA,cAAA,QACA,UAAA,EACA,SAAA,EACA,mBAAA,YAEA,WAAA,WACA,KAAA,WAAA,OAAA,OAAA,KAGA,kBACA,iBAAA,WAGA,IACA,SAAA,cAGA,QACA,qBAAA,YAGA,SAAA,WACA,KAAA,GAAA,SAAA,KAAA,qBAMA,GAAA,QAAA,IClEA,QAAA,SAAA,0BAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,SAAA,KAAA,QAEA,QACA,+BAAA,gBACA,cAAA,cAGA,WAAA,SAAA,GACA,GAAA,GAAA,EAAA,SAAA,EAAA,KACA,MAAA,GACA,KAAA,iBAIA,cAAA,WACA,GAAA,GAAA,KAAA,EAAA,SAAA,KACA,MAAA,mBAAA,GAAA,KAAA,SAAA,GACA,OAAA,QAAA,kBACA,IAAA,QAAA,WAAA,IACA,SAAA,GACA,GAAA,GAAA,EAAA,aAAA,OACA,QAAA,MAAA,KAAA,UAAA,MACA,KAAA,KAAA,UAAA,KAAA,OAEA,KAAA,eAGA,YAAA,WACA,KAAA,EAAA,QAAA,SAAA,sBACA,KAAA,EAAA,QAAA,KAAA,YAAA,GACA,KAAA,EAAA,SAAA,KAAA,YAAA,IAGA,UAAA,WACA,KAAA,EAAA,QAAA,YAAA,sBACA,KAAA,EAAA,QAAA,KAAA,YAAA,GACA,KAAA,EAAA,SAAA,KAAA,YAAA,IAGA,mBAAA,SAAA,GACA,GAAA,GAAA,EAAA,MACA,KAAA,OACA,IAAA,SACA,KAAA,KAAA,WAAA,IAAA,IACA,SACA,eAAA,mBACA,OAAA,qBAIA,OAAA,SAAA,QAAA,KAIA,GAAA,QAAA,GAAA,IAAA,GAAA,iBCtDA,QAAA,SAAA,0BAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,0BACA,EAAA,EAAA,mBAAA,KAEA,EAAA,WAAA,SAAA,QACA,WAAA,WACA,KAAA,MAAA,GAAA,GACA,KAAA,SAAA,KAAA,MAAA,SAAA,KAAA,QAEA,KAAA,GAAA,SAAA,SAAA,GACA,KAAA,MAAA,IAAA,EAAA,YAGA,KAAA,GAAA,QAAA,WACA,KAAA,MAAA,WAKA,IACA,SAAA,wBAGA,QACA,mBAAA,cAGA,WAAA,WACA,GAAA,GAAA,KAAA,GAAA,OAAA,KAAA,KACA,KAAA,QAAA,cAAA,GACA,SAAA,QAAA,SAAA,KAAA,SAAA,KAGA,SAAA,GAGA,GAAA,QAAA,GAAA,KCnCA,QAAA,SAAA,sBAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,0BAEA,EAAA,WAAA,SAAA,QACA,QAAA,KACA,UAAA,OACA,SAAA,EAEA,IACA,cAAA,mBAGA,aACA,uBAAA,qBAGA,QACA,MAAA,YAGA,OAAA,WACA,KAAA,qBAGA,kBAAA,WACA,KAAA,GAAA,cAAA,KAAA,KAAA,MAAA,mBAGA,SAAA,WACA,KAAA,IAAA,SAAA,UACA,KAAA,IAAA,WAAA,YAAA,UACA,SAAA,QAAA,SAAA,UAAA,KAAA,MAAA,IAAA,SAAA,KAGA,YAAA,WACA,KAAA,QAAA,eAAA,KAAA,MAAA,YAIA,EAAA,WAAA,eAAA,QACA,UAAA,EACA,UAAA,gBACA,QAAA,KAEA,aACA,eAAA,eAGA,YAAA,SAAA,EAAA,GACA,EAAA,IAAA,SAAA,UACA,EAAA,IAAA,SAAA,WAAA,YAAA,UAEA,IAAA,QAAA,eAAA,EAAA,MAAA,KAIA,GAAA,QAAA","file":"public/app.js.map","sourcesContent":["var FeedList = require('./views/feeds');\nvar EntriesView = require('./views/entries');\nvar Feeds = require('./models/feeds');\nvar feedForm = require('./views/feed-form'); // init only\nvar feedMetaView = require('./views/feed-meta');\n\nrequire('./etc/hbs-helpers'); // init only\nrequire('./etc/setup'); // init only\nvar feeds = new Feeds(fds, {parse: true});\n\nvar app = new Marionette.Application();\n\napp.addRegions({\n    feedsRegion: '#feed-list-region',\n    entriesRegion: '#entries-region',\n    feedMetaRegion: '#feed-meta-region'\n});\n\napp.addInitializer(function () {\n    this.feedsRegion.show(new FeedList({collection: feeds}));\n    this.feedMetaRegion.show(feedMetaView);\n});\n\napp.on('start', function () {\n    require('./router');\n    Backbone.history.start({pushState: true});\n});\n\napp.commands.setHandler('show-entries', function (feed, entries) {\n    Bugsnag.notifyException(new Error('show entries'), \"CustomErrorName\");\n\n    var view = new EntriesView({collection: entries});\n    app.entriesRegion.show(view);\n    feedMetaView.trigger('update', feed);\n});\n\napp.commands.setHandler('add-feed', function (rawFeed) {\n    var feed = feeds.add(_.omit(rawFeed, 'articles'));\n    feed.setEntries(rawFeed.articles);\n    app.execute('show-entries', feed, feed.entries);\n});\n\napp.commands.setHandler('delete-feed', function (fid) {\n    var feed = feeds.get(fid);\n    if (feed) {\n        return feed.destroy({success: function () {\n            toastr.success('Deleted');\n            feedMetaView.trigger('clear');\n        }});\n    }\n});\n\napp.commands.setHandler('show-feed', function (fid) {\n    var feed = feeds.get(fid);\n    if (feed) {\n        app.execute('show-entries', feed, feed.entries);\n    } else {\n        toastr.warning('Feed is not found.');\n    }\n});\n\nwindow.app = app;\n\nmodule.exports = app;\n\n$('.welcome').click(function () {\n    $('.left-column').toggleClass('hide');\n});","module.exports = {\n    'showFeed': function (id) {\n        console.log('show feed', id)\n        app.execute('show-feed', id);\n    }\n};","Handlebars.registerHelper('nice_date' , niceDate);\nHandlebars.registerHelper('ago' , ago);\n\nfunction niceDate(str) {\n    var date = moment(str);\n    if (!date.isValid()) return '';\n\n    return date.format('YYYY-MM-DD HH:mma');\n}\n\nfunction ago(str) {\n    var date = moment(str);\n    if (!date.isValid()) return '';\n    return date.fromNow();\n}","// in page link handling\n// hijack all in page anchor links, unless [data-bypass] is present\n$(window.document).on('click', 'a[href]:not([data-bypass])', function(e) {\n    if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n\n        // always prevent default\n\n        e.preventDefault();\n        var protocol = this.protocol + '//';\n        var href = this.href;\n        href = href.slice(protocol.length);\n        href = href.slice(href.indexOf('/') + 1);\n\n        if (isInternalLink.call(this)) {\n            e.stopPropagation();\n            Backbone.history.navigate(href, {trigger: true});\n        }\n    }\n});","var app = require('./app');\n\napp.start();","var Entry = Backbone.Model.extend({\n    idAttribute: '_id'\n});\n\nvar Entries = Backbone.Collection.extend({\n    model: Entry,\n    initialize: function (models, options) {\n        this.url = options.url;\n    },\n\n    comparator: function (e1, e2) {\n        return e1.get('pubdate') > e2.get('pubdate')? -1 : 1;\n    },\n    /**\n     * get the count of unread entries since last read entry\n     * @returns {int}\n     */\n    getUnreadCount: function () {\n\n        var count = 0;\n        for (var i = 0; i< this.length; i ++ ) {\n            if (this.at(i).get('isread')) break;\n            count += 1;\n        }\n        return count;\n    }\n});\n\n\nmodule.exports = Entries;","var Entries = require('./entries');\n\nvar Feed = Backbone.Model.extend({\n    idAttribute: '_id',\n\n    parse: function (resp, options) {\n        this.setupEntriesCollection(resp[this.idAttribute]);\n\n        if (_.isArray(resp.articles)) {\n            this.setEntries(resp.articles);\n        }\n\n        delete resp.articles;\n        return resp;\n    },\n\n    setupEntriesCollection: function (fid) {\n        if (!this.entries) {\n            this.entries = new Entries([], {url: '/feeds/' + fid + '/entries'});\n            this.entries.on('change:isread add', function () {\n                this.trigger('read-entry');\n            }, this);\n        }\n    },\n\n    setEntries: function (articles) {\n        this.entries.set(articles);\n    },\n\n    initialize: function () {\n        this.setupEntriesCollection(this.id);\n        this.on('destroy', function () {\n            if (this.entries) {\n                this.entries.trigger('feed-destroyed');\n            }\n            this.entries = null;\n        });\n    },\n\n    getUnreadCount: function () {\n        if (this.entries) {\n            return this.entries.getUnreadCount();\n        } else {\n            return 0;\n        }\n    }\n});\n\nvar Feeds = Backbone.Collection.extend({\n    model: Feed,\n    url: '/feeds',\n    comparator: function (f1, f2) {\n        return moment(f1.get('pubdate')) > moment(f2.get('pubdate')) ? -1 : 1;\n    }\n});\n\nFeeds.Feed = Feed;\n\nmodule.exports = Feeds;\n","var Router = Marionette.AppRouter.extend({\n    appRoutes: {\n        'feeds/:id': 'showFeed'\n    },\n    controller: require('./controller')\n});\n\n\nnew Router();","<div class=\"articles\">\n\n</div>\n\n<!--<div class=\"load-more\">Load More</div>-->","No entries found","<div class=\"row title\">\n\n    <div class=\"col-md-8\">\n        {{{title}}}\n    </div>\n\n    <div class=\"col-md-4 text-right\">\n        <time class=\"\">{{ago pubdate}}</time>\n\n        <a href=\"{{link}}\" target=\"_blank\" data-bypass>\n            <i class=\"fa fa-link fa-fw\"></i>\n        </a>\n\n        <i class=\"fa fa-bookmark-o fa-fw\"></i>\n    </div>\n</div>\n\n<div class=\"content\" style=\"display: none\">\n</div>\n","<div class=\"row\">\n    <div class=\"col-xs-9\">\n        <div class=\"title\" title=\"{{title}}\">{{title}}</div>\n        <div class=\"author\">{{author}}</div>\n    </div>\n    <div class=\"col-xs-3 text-right\">\n        <span class=\"unread-counter\">{{unreadCount}}</span>\n    </div>\n</div>\n","{{#if _id}}\n    <span class=\"title\">\n        {{title}}\n    </span>\n    <time class=\"pull-right btn\"><i class=\"fa fa-clock-o\"></i> {{nice_date pubdate}}</time>\n{{/if}}\n","var entryTemplate = require('../templates/entry');\nvar entriesTemplate = require('../templates/entries');\n\nvar EntryView = Marionette.ItemView.extend({\n    template: entryTemplate,\n    className: 'article',\n\n    initialize: function () {\n        if (this.model.get('isread')) {\n            this.$el.addClass('is-read');\n        }\n    },\n\n    ui: {\n        content: '.content',\n        title: '.title'\n    },\n\n    events: {\n        'click @ui.title': 'toggleContent'\n    },\n\n    modelEvents: {\n        'change:title': 'render'\n    },\n\n    toggleContent: function () {\n        var that = this;\n        if (!this._isContentRendered) {\n            this.ui.content.html(this.model.get('description'));\n        }\n        this.ui.content.toggle();\n        this.model.save({isread: true}, {patch: true}).then(function () {\n            that.$el.addClass('is-read');\n        });\n    }\n});\n\nvar EntriesView = Marionette.CompositeView.extend({\n    childView: EntryView,\n    template: entriesTemplate,\n    childViewContainer: '.articles',\n\n    initialize: function () {\n        this.collection.fetch({merge: true});\n    },\n\n    collectionEvents: {\n        'feed-destroyed': 'destroy'\n    },\n\n    ui : {\n        'loadMore': '.load-more'\n    },\n\n    events: {\n        'click @ui.loadMore': 'loadMore'\n    },\n\n    loadMore: function () {\n        this.ui.loadMore.text('Loading more...');\n    }\n});\n\n\n\nmodule.exports = EntriesView;","var FeedForm = Backbone.View.extend({\n\n    events: {\n        'click [data-action=add-feed]': 'submitFeedUrl',\n        'keyup input': 'checkEnter'\n    },\n\n    checkEnter: function (ev) {\n        var code = ev.keyCode || ev.which;\n        if (code === 13) {\n            this.submitFeedUrl();\n        }\n    },\n\n    submitFeedUrl: function () {\n        var url = this.$('input').val();\n        this.sendNewFeedRequest(url).then(function (feed) {\n            toastr.success('Feed is added.');\n            app.execute('add-feed', feed);\n        }, function (xhr) {\n            var msg = xhr.responseJSON.message;\n            toastr.error(JSON.stringify(msg));\n        }).then(this.resetIcon.bind(this));\n\n        this.disableForm();\n    },\n\n    disableForm: function () {\n        this.$('i.fa').addClass('fa-spin fa-refresh');\n        this.$('.btn').prop('disabled', true);\n        this.$('input').prop('disabled', true);\n    },\n\n    resetIcon: function () {\n        this.$('i.fa').removeClass('fa-spin fa-refresh');\n        this.$('.btn').prop('disabled', false);\n        this.$('input').prop('disabled', false);\n    },\n\n    sendNewFeedRequest: function (url) {\n        var request = $.ajax({\n            type: 'POST',\n            url: '/feeds',\n            data: JSON.stringify({url: url}),\n            headers: {\n                'content-type': 'application/json',\n                'accept': 'application/json'\n            }\n        });\n\n        return Promise.resolve(request);\n    }\n});\n\nmodule.exports = new FeedForm({el: '#feed-form'});","var metaTemplate = require('../templates/feed-meta');\nvar Feed = require('../models/feeds').Feed;\n\nvar FeedMetaView = Marionette.ItemView.extend({\n    initialize: function () {\n        this.model = new Feed;\n        this.listenTo(this.model, 'change', this.render);\n\n        this.on('update', function (m) {\n            this.model.set(m.toJSON());\n        });\n\n        this.on('clear', function () {\n            this.model.clear();\n        });\n    },\n\n\n    ui: {\n        'delete': '[data-action=delete]'\n    },\n\n    events: {\n        'click @ui.delete' : 'deleteFeed'\n    },\n\n    deleteFeed: function () {\n        var feedId = this.ui.delete.data('id');\n        app.execute('delete-feed', feedId);\n        Backbone.history.navigate('/', {trigger: true});\n    },\n\n    template  : metaTemplate\n});\n\nmodule.exports = new FeedMetaView;","var feedItemTemplate = require('../templates/feed-item');\n\nvar FeedItem = Marionette.ItemView.extend({\n    tagName : 'li',\n    className: 'feed',\n    template: feedItemTemplate,\n\n    ui: {\n        'unreadCounter': '.unread-counter'\n    },\n\n    modelEvents: {\n        'read-entry add-entry': 'updateUnreadCount'\n    },\n\n    events: {\n        'click': 'loadFeed'\n    },\n\n    onShow: function () {\n        this.updateUnreadCount();\n    },\n\n    updateUnreadCount: function () {\n        this.ui.unreadCounter.text(this.model.getUnreadCount());\n    },\n\n    loadFeed: function () {\n        this.$el.addClass('active');\n        this.$el.siblings().removeClass('active');\n        Backbone.history.navigate('/feeds/' + this.model.id, {trigger: true});\n    },\n\n    showEntries: function () {\n        this.trigger('show-entries', this.model.entries);\n    }\n});\n\nvar FeedList = Marionette.CollectionView.extend({\n    childView: FeedItem,\n    className: 'list-unstyled',\n    tagName  : 'ul',\n\n    childEvents: {\n        'show-entries': 'showEntries'\n    },\n\n    showEntries: function (child, entries) {\n        child.$el.addClass('active');\n        child.$el.siblings('.active').removeClass('active');\n\n        app.execute('show-entries', child.model, entries);\n    }\n});\n\nmodule.exports = FeedList;\n\n\n"]}